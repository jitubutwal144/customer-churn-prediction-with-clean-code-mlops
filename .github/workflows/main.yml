name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  config:
    name: Prepare environment variables
    runs-on: ubuntu-latest
    steps:
      - name: Prepare environment variables with CI_* naming pattern
        uses: FranzDiebold/github-env-vars-action@v2
      - name: Print environment variables
        run: |
          echo "CI_REPOSITORY_SLUG=$CI_REPOSITORY_SLUG"
          echo "CI_REPOSITORY_OWNER=$CI_REPOSITORY_OWNER"
          echo "CI_REPOSITORY_OWNER_SLUG=$CI_REPOSITORY_OWNER_SLUG"
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"
          echo "CI_REPOSITORY_NAME_SLUG=$CI_REPOSITORY_NAME_SLUG"
          echo "CI_REPOSITORY=$CI_REPOSITORY"
          echo "CI_REF_SLUG=$CI_REF_SLUG"
          echo "CI_ACTION_REF_NAME=$CI_ACTION_REF_NAME"
          echo "CI_ACTION_REF_NAME_SLUG=$CI_ACTION_REF_NAME_SLUG"
          echo "CI_REF_NAME=$CI_REF_NAME"
          echo "CI_REF_NAME_SLUG=$CI_REF_NAME_SLUG"
          echo "CI_REF=$CI_REF"
          echo "CI_HEAD_REF_SLUG=$CI_HEAD_REF_SLUG"
          echo "CI_HEAD_REF=$CI_HEAD_REF"
          echo "CI_BASE_REF_SLUG=$CI_BASE_REF_SLUG"
          echo "CI_BASE_REF=$CI_BASE_REF"
          echo "CI_SHA_SHORT=$CI_SHA_SHORT"
          echo "CI_SHA=$CI_SHA"
          echo "CI_PR_SHA_SHORT=$CI_PR_SHA_SHORT"
          echo "CI_PR_SHA=$CI_PR_SHA"
          echo "CI_PR_NUMBER=$CI_PR_NUMBER"
          echo "CI_PR_ID=$CI_PR_ID"
          echo "CI_PR_TITLE=$CI_PR_TITLE"
          echo "CI_PR_DESCRIPTION=$CI_PR_DESCRIPTION"
          echo "CI_ACTOR=$CI_ACTOR"
          echo "CI_EVENT_NAME=$CI_EVENT_NAME"
          echo "CI_RUN_ID=$CI_RUN_ID"
          echo "CI_RUN_NUMBER=$CI_RUN_NUMBER"
          echo "CI_WORKFLOW=$CI_WORKFLOW"
          echo "CI_ACTION=$CI_ACTION"

      - name: Prepare branch-based environment variables
        uses: iamtheyammer/branch-env-vars@v1.2.1
        with:
          bevOverwrite: true
          S3_BUCKET: |
            main:development-app
            release:production-app
            !pr>release:production-app
            !pr:development-app
            !tag:production-app
            !default:development-app
    outputs:
      S3_BUCKET: ${{ env.S3_BUCKET }}

  build:
    runs-on: ubuntu-latest
    needs: config
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r src/requirements.txt

      - name: Build the project
        env:
          S3_BUCKET_FOLDER: ${{ needs.config.outputs.S3_BUCKET }}
        run: |
          echo 'Build the project'
          echo '$S3_BUCKET_FOLDER'

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [config, build]
    steps:
      - name: Run tests
        run: echo 'Run pytest unit tests'

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [config, test]
    steps:
      - name: Prepare Variables

      - name: Deploy to staging
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo 'Deploy to staging environment'

      - name: Deploy to production
        if: github.ref == 'refs/tags/*' && github.event_name == 'push'
        run: |
          echo 'Deploy to production environment whenever new release tag is published'

  announcement:
    name: Announcement
    runs-on: ubuntu-latest
    needs: [config, deploy]
    if: success() && github.event_name == 'release'
    steps:
      - name: Send notification in slack or jira or anyother medium
        run: echo 'Notify in slack or anyother medium'
